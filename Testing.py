# Testing 1
# temp  =  neuronalNetwork( [2, 2, 1], 'lineal' )
# print( temp.forward([   [0, 1, 0, 1],
#                         [0, 0, 1, 1]]) )


# Testing 2
# import math
# def sigmoid( x ):
#     return 1/(1+math.exp(-x))
# x = 1
# y = 1
# a = sigmoid(2.26691517*x+2.3062711*y+-0.94086962)
# b = sigmoid(2.20302076*x+1.89332784*y+-0.34820717)
# c = sigmoid(0.95590418*a+0.27957298*b+-0.77824137)
# print(c)

import backPropagation
import numpy as np
RN = backPropagation.neuronalNetwork( [2,4,4,1], ['sigmoid', 'sigmoid', 'sigmoid'] )
A = np.array([
            [600,600],
            [596,592],
            [595,614],
            [618,589],
            [572,588],
            [593,641],
            [654,597],
            [586,527],
            [504,621],
            [666,715],
            [724,462],
            [534,389],
            [321,625],
            [389,836],
            [738,959],
            [326,706], 
            [513,934],
            [595,602],
            [605,608],
            [600,585],
            [583,591],
            [584,619],
            [614,625],
            [634,582],
            [566,557],
            [531,614],
            [558,630],
            [592,690],
            [711,612],
            [685,484],
            [478,466],
            [410,667],
            [653,886],
            [743,707]] )-600
A = np.transpose( A )
T = np.array( [[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]])
RN.train(A, T, 500000)
print( np.round(RN.forward(A)) )